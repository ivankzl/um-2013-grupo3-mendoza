package ar.edu.um.dao;

// Generated Feb 2, 2014 7:21:27 PM by Hibernate Tools 3.4.0.CR1

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import ar.edu.um.dao.base.DaoBase;
import ar.edu.um.entidad.Usuario;
import ar.edu.um.util.PersistenceUtil;

/**
 * Home object for domain model class Usuario.
 * @see ar.edu.um.entidad.Usuario
 * @author Hibernate Tools
 */
@Stateless
public class UsuarioDao extends DaoBase{

	private static final Log log = LogFactory.getLog(UsuarioDao.class);
	
	public UsuarioDao(EntityManager em) {
		this.entityManager = em;
	}

	public void persist(Usuario transientInstance) {
		log.debug("persisting Usuario instance");
		try {
			entityManager.getTransaction().begin();
			entityManager.persist(transientInstance);
			entityManager.getTransaction().commit();
			log.debug("persist successful");
		} catch (RuntimeException re) {
			log.error("persist failed", re);
			throw re;
		}
	}

	public void remove(Usuario persistentInstance) {
		log.debug("removing Usuario instance");
		try {
			entityManager.getTransaction().begin();
			entityManager.remove(persistentInstance);
			entityManager.getTransaction().commit();
			log.debug("remove successful");
		} catch (RuntimeException re) {
			log.error("remove failed", re);
			throw re;
		}
	}

	public Usuario merge(Usuario detachedInstance) {
		log.debug("merging Usuario instance");
		try {
			entityManager.getTransaction().begin();
			Usuario result = entityManager.merge(detachedInstance);
			entityManager.getTransaction().commit();
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	public Usuario findById(int id) {
		log.debug("getting Usuario instance with id: " + id);
		try {
			Usuario instance = entityManager.find(Usuario.class, id);
			log.debug("get successful");
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}
	
	/**
     * iniciarSesion: Loguea un usuario en el sistema
     * 
     * @param Usuario
     *            - Usuario que realizó la acción
     */	
	public Usuario iniciarSesion(String nombreUsuario, String clave){
		Usuario usuario = null;		
		usuario = (Usuario) entityManager.createNamedQuery("Usuario.loguearUsuario")
		.setParameter("nombreUsuario", nombreUsuario).setParameter("clave", clave)
		.getSingleResult();
		return usuario;
	}
}
